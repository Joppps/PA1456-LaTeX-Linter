@startuml
!theme blueprint

package Lint {

class FullStopNewline{
Adds newline characters to fullstops.
--
**Functions**
+NewLiner() -> string
--
**Imports**
"strings"
"regexp"
}

class Indentation{
Function to be called for from main
--
**Functions**
+EnviromentIndentation([]string) -> []string
-removeIndent() -> string
-starter() -> bool
-ender() -> bool
--
**Imports**
"regexp"
"strings"
}

class commentFormater {
 Adds specific spacers to comments
--
**Imports**
"regexp"
**Functions**
+CommentFormat() -> string
}

class blankLinesForSections {
 Adds blank lines before sections and chapters etc..
--
**Imports**
"regexp"
**Functions**
+InsertBlankLinesOnSections() -> string
}

}

package File {
class WriteToNewFile {
Writes file-lines to file copy.
--
**Functions**
+CreateAndWriteNewFile(...) -> bool
-fileExist(filepath) -> bool
**Imports**
"errors"
"fmt"
"log"
"os"
"strconv"
"strings"
}
}
map settings {
	NewLineFullStop => bool
	IndentTabs => bool
	IndentSpaces => int
	Indentation => bool
	FormatComments => bool
	CommentTabs => bool
	CommentSpaces => int
}


class main {
Main file and main function
--
**Functions**
-IsError() -> bool
-createSettings() -> void
-getSettings() -> (struct Settings, error)
-checkFileExtension() -> bool
--
**Imports**
File "LatexLinter/fileWrite"
Lint "LatexLinter/pkg"
"encoding/json"
"fmt"
"io/ioutil"
"os"
"strings"
}



note top of main : Main file that calls all functions.

object TexFile
object LintedFile
settings "JSON_FILE"--"Struct" main
main <|.. Indentation
main <|.. commentFormater
main <|.. WriteToNewFile
TexFile --|> main : new texFile goes through main
main --|> LintedFile : Linted file saves on CWD
main <|.. FullStopNewline
main <|.. blankLinesForSections
@enduml